{"version":3,"file":"static/js/892.bb055cca.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/InputGroup.js","components/Filter/Filter.jsx","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const getContacts = ({ contacts }) => contacts.items;\nexport const getLoading = ({ contacts }) => contacts.loading;\nexport const getError = ({ contacts }) => contacts.error;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, Form } from 'react-bootstrap';\n\nconst ContactForm = ({ addContactBySubmit }) => {\n  const [state, setState] = useState({\n    name: '',\n    number: '',\n  });\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addContactBySubmit(state);\n    setState({ name: '', number: '' });\n  };\n  const { name, number } = state;\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput2\">\n        <Form.Label>Number</Form.Label>\n        <Form.Control\n          type=\"tel\"\n          value={number}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  addContactBySubmit: PropTypes.func.isRequired,\n};\n","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\n\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\n\n/**\n *\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group'); // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, FormControl } from 'react-bootstrap';\n\nconst Filter = ({ handleChange, filter }) => {\n  return (\n    <InputGroup className=\"mb-3\">\n      <InputGroup.Text id=\"basic-addon1\">\n        Find contacts by name:\n      </InputGroup.Text>\n      <FormControl\n        placeholder=\"Enter the name...\"\n        aria-label=\"Name\"\n        aria-describedby=\"basic-addon1\"\n        type=\"text\"\n        value={filter}\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleChange}\n      />\n    </InputGroup>\n  );\n};\n\nexport default memo(Filter);\n\nFilter.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","import PropTypes from 'prop-types';\n\nimport { ListGroup, CloseButton } from 'react-bootstrap';\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  const elements = contacts.map(({ name, number, id }) => (\n    <ListGroup.Item\n      as=\"li\"\n      key={id}\n      className=\"d-flex justify-content-between align-items-start\"\n    >\n      <p>\n        {name}: {number}\n      </p>\n      <CloseButton onClick={() => deleteContact(id)} />\n    </ListGroup.Item>\n  ));\n  return (\n    <ListGroup as=\"ol\" numbered className=\"\">\n      {elements}\n    </ListGroup>\n  );\n};\n\nexport default ContactList;\n\nContactList.defaultProps = {\n  contacts: [],\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n  deleteContact: PropTypes.func.isRequired,\n};\n","import { useState, useEffect, useCallback } from 'react';\n\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\n\nimport { Spinner } from 'react-bootstrap';\n\nimport {\n  getContacts,\n  getLoading,\n  getError,\n} from '../../redux/contacts/contacts-selectors';\n\nimport * as operations from '../../redux/contacts/contacts-operations';\n\nimport ContactForm from '../../components/ContactForm';\nimport Filter from '../../components/Filter';\nimport ContactList from '../../components/ContactList';\nimport { Container } from 'react-bootstrap';\n\nconst ContactsPage = () => {\n  const contacts = useSelector(getContacts, shallowEqual);\n  const loading = useSelector(getLoading, shallowEqual);\n  const error = useSelector(getError, shallowEqual);\n  const [filter, setFilter] = useState('');\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(operations.fetchContacts());\n  }, [dispatch]);\n\n  const handleChange = useCallback(\n    e => {\n      setFilter(e.target.value);\n    },\n    [setFilter]\n  );\n\n  const deleteContact = id => {\n    dispatch(operations.deleteContact(id));\n  };\n\n  const getFilteredContacts = useCallback(() => {\n    if (!filter) {\n      return contacts;\n    }\n    const filterToLover = filter.toLowerCase();\n    const filteredContacts = contacts.filter(({ name }) => {\n      const result = name.toLowerCase().includes(filterToLover);\n      return result;\n    });\n    return filteredContacts;\n  }, [contacts, filter]);\n\n  const addContactBySubmit = props => {\n    dispatch(operations.addContact(props));\n  };\n\n  return (\n    <Container className=\"w-50 p-3\">\n      <h1 className=\"\">Phonebook</h1>\n      <ContactForm addContactBySubmit={addContactBySubmit} />\n      <h2 className=\"\">Contacts</h2>\n      <Filter handleChange={handleChange} filter={filter} />\n      {error && <p>Whoops...Please try later</p>}\n      {loading && (\n        <div className=\"text-center\">\n          <Spinner animation=\"border\" role=\"status\" variant=\"primary\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </Spinner>\n        </div>\n      )}\n      {Boolean(contacts.length) && (\n        <ContactList\n          contacts={getFilteredContacts()}\n          deleteContact={deleteContact}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["getContacts","contacts","items","getLoading","loading","getError","error","addContactBySubmit","useState","name","number","state","setState","handleChange","e","target","value","Form","onSubmit","preventDefault","className","controlId","type","pattern","title","required","onChange","Button","variant","context","React","displayName","InputGroupText","createWithBsPrefix","Component","InputGroup","ref","bsPrefix","size","hasValidation","as","props","useBootstrapPrefix","contextValue","useMemo","_jsx","InputGroupContext","Provider","children","classNames","Object","assign","Text","Radio","FormCheckInput","Checkbox","Filter","filter","id","FormControl","placeholder","memo","ListGroupItem","active","disabled","eventKey","action","useNavItem","key","makeEventKey","href","navItemProps","meta","handleClick","useEventCallback","event","stopPropagation","onClick","undefined","tabIndex","isActive","ListGroup","horizontalVariant","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","Item","ContactList","deleteContact","elements","map","CloseButton","defaultProps","useSelector","shallowEqual","setFilter","dispatch","useDispatch","useEffect","operations","useCallback","getFilteredContacts","filterToLover","toLowerCase","includes","Container","Spinner","animation","role","Boolean","length"],"sourceRoot":""}